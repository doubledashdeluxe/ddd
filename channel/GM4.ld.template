PHDRS {
    first PT_LOAD;
    text PT_LOAD;
    rodata PT_LOAD;
    data PT_LOAD;
    bss PT_LOAD;
}

SECTIONS {
    . = 0x80003400;
    .first : ALIGN(32) { *(first) } :first
    . = 0x80800000 + 0x100 + SIZEOF(.first);
    .text : ALIGN(32) { *(.init*) *(.text*) } :text
    .ctors : ALIGN(32) { *(.ctors*) } :rodata
    .dtors : ALIGN(32) { *(.dtors*) } :rodata
    .rodata : ALIGN(32) { *(.rodata*) } :rodata
    .data : ALIGN(32) { *(.data*) } :data
    .bss : ALIGN(32) { *(.bss*) } :bss

    channel_text_start = ADDR(.text);
    channel_text_end = channel_text_start + SIZEOF(.text);
    channel_ctors_start = ADDR(.ctors);
    channel_ctors_end = channel_ctors_start + SIZEOF(.ctors);
    channel_dtors_start = ADDR(.dtors);
    channel_dtors_end = channel_dtors_start + SIZEOF(.dtors);
    channel_rodata_start = ADDR(.rodata);
    channel_rodata_end = channel_rodata_start + SIZEOF(.rodata);
    channel_data_start = ADDR(.data);
    channel_data_end = channel_data_start + SIZEOF(.data);
    channel_bss_start = ADDR(.bss);
    channel_bss_end = channel_bss_start + SIZEOF(.bss);

    stackTop = ADDR(.text) - 0x8;

$symbols
}

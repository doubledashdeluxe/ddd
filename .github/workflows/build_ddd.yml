name: Build DDD

on: [push, pull_request]

env:
  llvm-version: 20.1.8

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
          - windows-2025
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set version
        if: github.ref_type == 'tag'
        run: git describe --tags --abbrev=0 > version.txt
      - name: Setup LLVM
        uses: ./.github/actions/setup-llvm
        with:
          llvm-version: ${{ env.llvm-version }}
      - name: Install Wine
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install wine32
          WINEARCH=win32 winecfg
      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install pyelftools
        run: pip install pyelftools
      - name: Cache CodeWarrior
        id: cache-cw
        uses: actions/cache@v4
        with:
          path: cache
          key: ${{ runner.os }}-cw-se-v2.10
      - name: Download CodeWarrior
        if: steps.cache-cw.outputs.cache-hit != 'true'
        run: |
          mkdir cache && cd cache
          curl -OJ https://www.nxp.com/lgfiles/devsuites/PowerPC/CW55xx_v2_10_SE.exe
          cd ..
      - name: Prepare tools
        run: bash tools/prepare.sh cache/CW55xx_v2_10_SE.exe
      - name: Build
        run: python build.py --ci --llvm-dir tools/llvm -- ddd
      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-ddd
          path: out

  compare-results:
    name: Compare results
    runs-on: ubuntu-24.04
    needs: build
    timeout-minutes: 5
    steps:
      - name: Download results
        uses: actions/download-artifact@v5
      - name: Compare
        run: cmp Linux-ddd/boot.dol Windows-ddd/boot.dol

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
          - windows-2025
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set version
        if: github.ref_type == 'tag'
        run: git describe --tags --abbrev=0 > version.txt
      - name: Setup LLVM
        uses: ./.github/actions/setup-llvm
        with:
          llvm-version: ${{ env.llvm-version }}
      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Setup ASan
        if: runner.os == 'Windows'
        run: echo tools/llvm/lib/clang/20/lib/windows >> $GITHUB_PATH
      - name: Test
        run: |
          python build.py --ci --llvm-dir tools/llvm -- tests
          out/tests

  fuzz:
    name: Fuzz
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
          - windows-2025
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set version
        if: github.ref_type == 'tag'
        run: git describe --tags --abbrev=0 > version.txt
      - name: Setup LLVM
        uses: ./.github/actions/setup-llvm
        with:
          llvm-version: ${{ env.llvm-version }}
      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Setup ASan
        if: runner.os == 'Windows'
        run: echo tools/llvm/lib/clang/20/lib/windows >> $GITHUB_PATH
      - name: Fuzz
        run: |
          python build.py --ci --llvm-dir tools/llvm -- fuzzers
          python fuzz.py data/fuzzers/inputs/*
          python fuzz.py -max_total_time=10

  check:
    name: Check on Linux
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set version
        if: github.ref_type == 'tag'
        run: git describe --tags --abbrev=0 > version.txt
      - name: Setup LLVM
        uses: ./.github/actions/setup-llvm
        with:
          llvm-version: ${{ env.llvm-version }}
      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Check
        run: python build.py --ci --llvm-dir tools/llvm -- checks

  format:
    name: Format
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
          - windows-2025
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup LLVM
        uses: ./.github/actions/setup-llvm
        with:
          llvm-version: ${{ env.llvm-version }}
      - name: Install Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Format
        run: python format.py --ci --llvm-dir tools/llvm
